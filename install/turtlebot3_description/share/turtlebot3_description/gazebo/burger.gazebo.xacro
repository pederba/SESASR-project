<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="burger_gazebo" params="prefix">

  <xacro:property name="laser_visual"  value="true"/>

  <xacro:property name="imu_ang_vel_noise_mean" value="0.0" />
  <xacro:property name="imu_ang_vel_noise_stddev" value="2e-4" />
  <xacro:property name="imu_ang_vel_noise_bias_mean" value="0.0000075" />
  <xacro:property name="imu_ang_vel_noise_bias_stddev" value="0.0000008" />
  <xacro:property name="imu_lin_acc_noise_mean" value="0.0" />
  <xacro:property name="imu_lin_acc_noise_stddev" value="1.7e-2" />
  <xacro:property name="imu_lin_acc_noise_bias_mean" value="0.1" />
  <xacro:property name="imu_lin_acc_noise_bias_stddev" value="0.001" />

  <gazebo reference="${prefix}base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="${prefix}wheel_left_link">
    <mu1>10000</mu1>
    <mu2>10000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>0 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="${prefix}wheel_right_link">
    <mu1>10000</mu1>
    <mu2>10000</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>0 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="${prefix}caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>10000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="${prefix}imu_link">
    <material>Gazebo/Grey</material>
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>${imu_ang_vel_noise_mean}</mean>
              <stddev>${imu_ang_vel_noise_stddev}</stddev>
              <bias_mean>${imu_ang_vel_noise_bias_mean}</bias_mean>
              <bias_stddev>${imu_ang_vel_noise_bias_stddev}</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>${imu_ang_vel_noise_mean}</mean>
              <stddev>${imu_ang_vel_noise_stddev}</stddev>
              <bias_mean>${imu_ang_vel_noise_bias_mean}</bias_mean>
              <bias_stddev>${imu_ang_vel_noise_bias_stddev}</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>${imu_ang_vel_noise_mean}</mean>
              <stddev>${imu_ang_vel_noise_stddev}</stddev>
              <bias_mean>${imu_ang_vel_noise_bias_mean}</bias_mean>
              <bias_stddev>${imu_ang_vel_noise_bias_stddev}</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>${imu_lin_acc_noise_mean}</mean>
              <stddev>${imu_lin_acc_noise_stddev}</stddev>
              <bias_mean>${imu_lin_acc_noise_bias_mean}</bias_mean>
              <bias_stddev>${imu_lin_acc_noise_bias_stddev}</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>${imu_lin_acc_noise_mean}</mean>
              <stddev>${imu_lin_acc_noise_stddev}</stddev>
              <bias_mean>${imu_lin_acc_noise_bias_mean}</bias_mean>
              <bias_stddev>${imu_lin_acc_noise_bias_stddev}</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>${imu_lin_acc_noise_mean}</mean>
              <stddev>${imu_lin_acc_noise_stddev}</stddev>
              <bias_mean>${imu_lin_acc_noise_bias_mean}</bias_mean>
              <bias_stddev>${imu_lin_acc_noise_bias_stddev}</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>

  <!-- <gazebo>
    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <namespace></namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>

      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>0.160</wheel_separation>
      <wheel_diameter>0.066</wheel_diameter>
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo> -->

  <gazebo>
    <plugin name="gazebo_ros_p3d" filename="libgazebo_ros_p3d.so">
        <ros>
          <namespace>/</namespace>
          <remapping>odom:=ground_truth</remapping>
        </ros>
        <body_name>base_footprint</body_name>
        <frame_name>world</frame_name>
        <update_rate>20</update_rate>
      </plugin>
  </gazebo>

  <gazebo reference="${prefix}base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <update_rate>5.0</update_rate>
      <visualize>${laser_visual}</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace></namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
      </plugin>
    </sensor>
  </gazebo>

  </xacro:macro>

</robot>
